version: '3.8'

services:
  # Backend service
  dashboard-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: levieuxmoulin-dashboard-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000,http://localhost
      - JWT_SECRET=${JWT_SECRET}
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - CENTRAL_API_URL=${CENTRAL_API_URL}
      - CENTRAL_API_KEY=${CENTRAL_API_KEY}
      - IOT_SERVICE_URL=${IOT_SERVICE_URL}
      - ML_SERVICE_URL=${ML_SERVICE_URL}
      - MARKETING_SERVICE_URL=${MARKETING_SERVICE_URL}
      - ACCOUNTING_SERVICE_URL=${ACCOUNTING_SERVICE_URL}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL}
      - LOG_LEVEL=info
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/public:/app/public
    networks:
      - levieuxmoulin-network
    depends_on:
      - dashboard-mongo
      - dashboard-redis

  # Frontend service for development (commented by default)
  # dashboard-frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: levieuxmoulin-dashboard-frontend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:5000/api/v1
  #     - REACT_APP_SOCKET_URL=http://localhost:5000
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   networks:
  #     - levieuxmoulin-network

  # Web server for production (serves frontend build files)
  dashboard-web:
    image: nginx:alpine
    container_name: levieuxmoulin-dashboard-web
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - levieuxmoulin-network
    depends_on:
      - dashboard-backend

  # MongoDB (optional)
  dashboard-mongo:
    image: mongo:6
    container_name: levieuxmoulin-dashboard-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - levieuxmoulin-network
    ports:
      - "27017:27017"

  # Redis for caching (optional)
  dashboard-redis:
    image: redis:7-alpine
    container_name: levieuxmoulin-dashboard-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - levieuxmoulin-network
    ports:
      - "6379:6379"

networks:
  levieuxmoulin-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
